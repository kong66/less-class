//"out":"./css/styles.css"

body{
  text-align: center;
}
ul,ol{
  list-style: none;
}
.button(){
  .size(@w:120px;@h:30px;@r:6px){
    width: @w;
    height: @h;
    border-radius: @r;
  }
  .color(@bg:royalblue;@h-bg:purple){
    background: @bg;
    &:hover{
      background: @h-bg;
    }
  }
}
//1
.box-shadow(){
  box-shadow+:inset 1px 1px #aaa;
}
#p1{
  .box-shadow();
  box-shadow+:1px 1px black;
  .button.size();
  .button.color();
}

.transform-scale(@s){
  transform+_:scale(@s);
}
.transform-trans(@tx,@ty){
  transform+_: translate(@tx,@ty);
}
.transform-rotate(@r){
  transform+_: rotate(@r);
}
#p2{
  .transform-trans(200px,50px);
  .transform-rotate(20deg);
  .transform-scale(2);
  .button.size();
  .button.color();
}

.set-shadow(@color;@x;@y;@n;@i:1) when(@i < @n){
  box-shadow+: @x @y @color;
  .set-shadow(@color;@x+1px;@y+1px;@n;@i+1);
}
#p3{
  .set-shadow(gray;1px;1px;10);
  .button.size();
  .button.color(orange);
}

//2
// #p4:extend(#p5){
//   color:red;
// }
#p4{
  &:extend(#p5);
  color:red;
}
#p5{
  .button.size();
  .button.color();
}
//3
.p6-1{
  color:red;
}
.p6-2{
  box-shadow: 1px 1px 3px red;
}
div.p6-1{
  border:solid black 2px;
}
div.p6-2{
  border:solid black 2px;
}
#p6:extend(.p6-1 all,.p6-2){
  .button.size();
  .button.color();
}

//4
// nested selector
.btn-1{
  color:yellow;
}
.btn-2{
  box-shadow: 1px 1px 3px black;
}
#p7,#p8{
  &:extend(.btn-1,.btn-2);
  .button.size();
  .button.color();
}
//extend inside ruleset
.outer{
  .inner{
    color:red;
  }
  .inner &{
    border-color: orange;
  }
}
.ex:extend(.outer .inner,.inner .outer){
  background: red;
}
//exact match
.x.class,
.class.x,
.class>.a,
*.class{
  color:blue;
}
.exact:extend(.class){
  background: orange;
}
//not match nth-exp
li:nth-child(n+3){
  color:blue;
}
.nth:extend(:nth-child(n+3)){
  background: orange;
}
//quote in attribute selector does not matter
[type=text]{
  color:red;
}
[type='text']{
  color:red;
}
[type="text"]{
  color:red;
}
.noQuote:extend([type=text]){}
.sigleQuote:extend([type='text']){}
.doubleQuote:extend([type="text"]){}

// extend with all
.rect.size{
  width:120px;
  height: 30px;
  border-radius: 6px;
}
.rect.color{
  background: orange;
  &:hover{
    background: purple;
  }
}
#p9:extend(.rect all){}

// unable match selector with variables
@var: .target;
@{var}{
  color:red;
}
.var-class:extend(.target){}

.target2{
  color:red;
}
@var2:.target2;
.var-class2:extend(@{var2}){}

.target3{
  color:red;
}
@var3: .varclass3;
@{var3}:extend(.target3){}

// @media

@media screen{
  .mediaInner:extend(.mediaA){}
  @media (min-width: 1080px){
    .mediaA{
      color:green;
    }
  }
  .mediaA{
    color:red;
  }
}
.mediaA{
  color:blue;
}
@media print{
  .mediaA{
    color:yellow;
  }
}
@media screen{
  .mediaB{
    color:red;
  }
  @media (min-width: 1080px){
    .mediaB{
      color:green;
    }
  }
}
.top:extend(.mediaB){}

//duplication detection
.dupA,.dupB{
  color:red;
}
.dup:extend(.dupA,.dupB){}

//reduce css
.max-class(){
  color:red;
  background: black;
}
.max-a{
  .max-class();
}
.max-b{
  .max-class();
}

.min-class{
  color:red;
  background: black;
}
.min-a{
  &:extend(.min-class);
}
.min-b{
  &:extend(.min-class);
}
